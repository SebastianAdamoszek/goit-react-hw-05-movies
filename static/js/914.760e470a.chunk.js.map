{"version":3,"file":"static/js/914.760e470a.chunk.js","mappings":"kMAEAA,EAAAA,EAAMC,SAASC,QAAU,gCAEzB,MAAMC,EAAU,mCAGVC,EAAcC,UAClB,IACE,MAAMC,QAAiBN,EAAAA,EAAMO,IAAI,4BAADC,OAA6BL,IAE7D,OAAO,IAAIM,SAAQC,IACjBC,YAAW,KACTD,EAAQJ,EAASM,KAAKC,QAAQ,GAC7B,IAAI,GAEX,CAAE,MAAOC,GACPC,QAAQC,IAAI,qBAAsBF,EACpC,GAIIG,EAAeZ,UACnB,IACE,MAAMC,QAAiBN,EAAAA,EAAMO,IAAI,wBAADC,OACNL,EAAO,WAAAK,OAAUU,IAE3C,OAAO,IAAIT,SAAQC,IACjBC,YAAW,KACTD,EAAQJ,EAASM,KAAKC,QAAQ,GAC7B,IAAI,GAEX,CAAE,MAAOC,GACPC,QAAQC,IAAI,sBAAuBF,EACrC,GAIIK,EAAkBd,UACtB,IACE,MAAMC,QAAiBN,EAAAA,EAAMO,IAAI,SAADC,OAAUY,EAAO,aAAAZ,OAAYL,IAC7D,OAAO,IAAIM,SAAQC,IACjBC,YAAW,KACTD,EAAQJ,EAASM,KAAK,GACrB,IAAK,GAEZ,CAAE,MAAOE,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,GAIIO,EAAkBhB,UACtB,IACE,MAAMC,QAAiBN,EAAAA,EAAMO,IAAI,SAADC,OACrBY,EAAO,qBAAAZ,OAAoBL,IAEtC,OAAO,IAAIM,SAAQC,IACjBC,YAAW,KACTD,EAAQJ,EAASM,KAAKU,KAAK,GAC1B,IAAI,GAEX,CAAE,MAAOR,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,GAIIS,EAAkBlB,UACtB,IACE,MAAMC,QAAiBN,EAAAA,EAAMO,IAAI,SAADC,OACrBY,EAAO,qBAAAZ,OAAoBL,IAEtC,OAAO,IAAIM,SAAQC,IACjBC,YAAW,KACTD,EAAQJ,EAASM,KAAKC,QAAQ,GAC7B,IAAI,GAEX,CAAE,MAAOC,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,E,6FC/EF,QAA0B,8BAA1B,EAAgE,4BAAhE,EAA2G,mCAA3G,EAAwJ,8BAAxJ,EAAoM,kCAApM,EAAiP,+BAAjP,EAA6R,iCAA7R,EAAyU,+BAAzU,EAA+W,2BAA/W,EAAiZ,2BAAjZ,EAAub,+B,aCOvb,MA8GA,EA9GqBU,KAAO,IAADC,EAAAC,EACzB,MAAM,QAAEN,IAAYO,EAAAA,EAAAA,OACbC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,MAGrCG,EAA+B,QAAvBR,EAAiB,QAAjBC,GADGQ,EAAAA,EAAAA,MACSC,aAAK,IAAAT,OAAA,EAAdA,EAAgBU,YAAI,IAAAX,EAAAA,EAAI,UAiBzC,OAfAY,EAAAA,EAAAA,YAAU,KACehC,WACrB,IACE,MAAMiC,QAAgBnB,EAAAA,EAAAA,IAAgBC,GACtCY,EAAaM,EACf,CAAE,MAAOxB,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,CAAC,QACCe,GAAa,EACf,GAGFU,EAAgB,GACf,CAACnB,IAECW,GAmBHS,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,SACGb,GACCc,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAEPH,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAYJ,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAACM,EAAAA,GAAI,CAACC,GAAId,EAAUW,UAAWC,EAAaJ,SAAA,CAAC,YACjC,UAGdC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEE,UAAWC,EACXG,IACEjB,EAAUkB,YAAW,kCAAAzC,OACiBuB,EAAUkB,aAC5C,+EAENC,IAAKnB,EAAUoB,WAGnBX,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAgBJ,SAAA,EAC9BD,EAAAA,EAAAA,MAAA,MAAII,UAAWC,EAAYJ,SAAA,CACxBV,EAAUoB,MAAM,KAAGpB,EAAUqB,aAAaC,MAAM,KAAK,GAAG,QAE3Db,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eACYa,KAAKC,MAAOxB,EAAUyB,aAAe,GAAM,KAAK,OAE9DzB,EAAU0B,WACTjB,EAAAA,EAAAA,MAAAkB,EAAAA,SAAA,CAAAjB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAGE,UAAWC,EAAaJ,SAAEV,EAAU0B,cAG1C1B,EAAU4B,SACTnB,EAAAA,EAAAA,MAAAkB,EAAAA,SAAA,CAAAjB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAeJ,SAC3BV,EAAU4B,OAAOC,KAAIC,IACpBnB,EAAAA,EAAAA,KAAA,MAAAD,SAAoBoB,EAAMC,MAAjBD,EAAME,oBAS/BvB,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAaJ,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJD,EAAAA,EAAAA,MAAA,MAAII,UAAWC,EAASJ,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,OAAOH,UAAWC,EAASJ,SAAC,YAIvCC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,UAAUH,UAAWC,EAASJ,SAAC,kBAK5CC,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,WAhFTtB,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAAD,SACGb,GACCc,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAEPH,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAYJ,SAAA,EAC1BC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAId,EAAUW,UAAWC,EAAaJ,SAAC,eAG7CC,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAiBJ,SAAC,kCAyEpC,C","sources":["Api/Api.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'e8ab892b2ac2cd96b9f442270f7b9c45';\n\n// Pobieranie aktualnie najpopularniejszych filmów\nconst getTrending = async () => {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.results);\n      }, 500);\n    });\n  } catch (error) {\n    console.log('getTrending error:', error);\n  }\n};\n\n// Wyszukiwanie filmu po słowie kluczowym\nconst searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.results);\n      }, 500);\n    });\n  } catch (error) {\n    console.log('searchMovies error:', error);\n  }\n};\n\n// Pobieranie wszytkich informacji o filmie\nconst getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data);\n      }, 1000);\n    });\n  } catch (error) {\n    console.error('getMovieDetails error:', error);\n  }\n};\n\n// Pobieranie informacji o aktorach w danym filmie\nconst getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.cast);\n      }, 500);\n    });\n  } catch (error) {\n    console.error('getMovieCredits error:', error);\n  }\n};\n\n// Pobieranie recenzji o filmie\nconst getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.results);\n      }, 500);\n    });\n  } catch (error) {\n    console.error('getMovieReviews error:', error);\n  }\n};\n\nexport {\n  getTrending,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Wrapper\":\"MovieDetails_Wrapper__1xf4e\",\"Image\":\"MovieDetails_Image__V6K1r\",\"ErrorHeading\":\"MovieDetails_ErrorHeading__RvzFd\",\"Heading\":\"MovieDetails_Heading__xwOnf\",\"Description\":\"MovieDetails_Description__DW17q\",\"Overview\":\"MovieDetails_Overview__+e3uD\",\"GenresList\":\"MovieDetails_GenresList__V+NBJ\",\"MoreInfo\":\"MovieDetails_MoreInfo__1wKlZ\",\"List\":\"MovieDetails_List__whW3w\",\"Link\":\"MovieDetails_Link__HT1W6\",\"prevLink\":\"MovieDetails_prevLink__vPIZy\"};","import React from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'Api/Api';\nimport Loader from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [movieData, setMovieData] = useState(null);\n\n  const location = useLocation();\n  const prevLink = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const details = await getMovieDetails(movieId);\n        setMovieData(details);\n      } catch (error) {\n        console.error('FetchingMovieData error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieData();\n  }, [movieId]);\n\n  if (!movieData) {\n    return (\n      <main>\n        <div>\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <div className={css.Wrapper}>\n              <Link to={prevLink} className={css.prevLink}>\n                Prievious\n              </Link>\n              <h1 className={css.ErrorHeading}>Information unavailable</h1>\n            </div>\n          )}\n        </div>\n      </main>\n    );\n  }\n  return (\n    <main>\n      <div>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <div className={css.Wrapper}>\n            <div>\n              <Link to={prevLink} className={css.prevLink}>\n                Prievious{' '}\n              </Link>\n            </div>\n            <div>\n              <img\n                className={css.Image}\n                src={\n                  movieData.poster_path\n                    ? `https://image.tmdb.org/t/p/w500${movieData.poster_path}`\n                    : 'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg'\n                }\n                alt={movieData.title}\n              />\n            </div>\n            <div className={css.Description}>\n              <h1 className={css.Heading}>\n                {movieData.title} ({movieData.release_date.split('-')[0]})\n              </h1>\n              <p>\n                User Score: {Math.round((movieData.vote_average / 10) * 100)}%\n              </p>\n              {movieData.overview && (\n                <>\n                  <h2>Overview</h2>\n                  <p className={css.Overview}>{movieData.overview}</p>\n                </>\n              )}\n              {movieData.genres && (\n                <>\n                  <h3>Genres</h3>\n                  <ul className={css.GenresList}>\n                    {movieData.genres.map(genre => (\n                      <li key={genre.id}>{genre.name}</li>\n                    ))}\n                  </ul>\n                </>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n      <div className={css.MoreInfo}>\n        <h2>More informations</h2>\n        <ul className={css.List}>\n          <li>\n            <Link to=\"cast\" className={css.Link}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" className={css.Link}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </main>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","defaults","baseURL","API_KEY","getTrending","async","response","get","concat","Promise","resolve","setTimeout","data","results","error","console","log","searchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","MovieDetails","_location$state$from","_location$state","useParams","isLoading","setIsLoading","useState","movieData","setMovieData","prevLink","useLocation","state","from","useEffect","details","fetchMovieData","_jsxs","children","_jsx","Loader","className","css","Link","to","src","poster_path","alt","title","release_date","split","Math","round","vote_average","overview","_Fragment","genres","map","genre","name","id","Outlet"],"sourceRoot":""}