{"version":3,"file":"static/js/900.a76e5460.chunk.js","mappings":"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","sources":["Api/Api.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'e8ab892b2ac2cd96b9f442270f7b9c45';\n\n// Pobieranie aktualnie najpopularniejszych filmów\nconst getTrending = async () => {\n  try {\n    const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.results);\n      }, 500);\n    });\n  } catch (error) {\n    console.log('getTrending error:', error);\n  }\n};\n\n// Wyszukiwanie filmu po słowie kluczowym\nconst searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.results);\n      }, 500);\n    });\n  } catch (error) {\n    console.log('searchMovies error:', error);\n  }\n};\n\n// Pobieranie wszytkich informacji o filmie\nconst getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data);\n      }, 1000);\n    });\n  } catch (error) {\n    console.error('getMovieDetails error:', error);\n  }\n};\n\n// Pobieranie informacji o aktorach w danym filmie\nconst getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.cast);\n      }, 500);\n    });\n  } catch (error) {\n    console.error('getMovieCredits error:', error);\n  }\n};\n\n// Pobieranie recenzji o filmie\nconst getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(response.data.results);\n      }, 500);\n    });\n  } catch (error) {\n    console.error('getMovieReviews error:', error);\n  }\n};\n\nexport {\n  getTrending,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ErrorHeading\":\"Cast_ErrorHeading__5ZqNo\",\"CastList\":\"Cast_CastList__2oQ+0\",\"ActorContainer\":\"Cast_ActorContainer__HRM5W\",\"ActorImage\":\"Cast_ActorImage__M0QAh\",\"ActorInfo\":\"Cast_ActorInfo__hn1gA\",\"ActorName\":\"Cast_ActorName__93D+n\",\"ActorCharacter\":\"Cast_ActorCharacter__jdV5b\"};","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'Api/Api';\nimport Loader from 'components/Loader/Loader';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [movieCast, setMovieCast] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const details = await getMovieCredits(movieId);\n        setMovieCast(details);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  if (!movieCast || movieCast.length === 0) {\n    return (\n      <div>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <h1 className={css.ErrorHeading}>Images unavailable </h1>\n        )}\n      </div>\n    );\n  }\n  return (\n    <div>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul className={css.CastList}>\n          {movieCast.map(cast => (\n            <li key={cast.id} className={css.ListItem}>\n              <div className={css.ActorContainer}>\n                <img\n                  className={css.ActorImage}\n                  src={\n                    cast.profile_path\n                      ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                      : 'https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg'\n                  }\n                  alt={cast.original_name}\n                />\n                <div className={css.ActorInfo}>\n                  <p className={css.ActorName}>\n                    <strong>{cast.name}</strong>\n                  </p>\n                  <p className={css.ActorCharacter}>\n                    <strong>Character:</strong> {cast.character}\n                  </p>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","defaults","baseURL","API_KEY","getTrending","async","response","get","concat","Promise","resolve","setTimeout","data","results","error","console","log","searchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Cast","useParams","isLoading","setIsLoading","useState","movieCast","setMovieCast","useEffect","details","fetchMovieCast","length","_jsx","children","Loader","className","css","CastList","map","ListItem","_jsxs","ActorContainer","ActorImage","src","profile_path","alt","original_name","ActorInfo","ActorName","name","ActorCharacter","character","id","ErrorHeading"],"sourceRoot":""}